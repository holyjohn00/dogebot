'use strict';

var util = require('util');
var path = require('path');
var fs = require('fs');
var sqLite = require('sqlite3').verbose();
var bot = require('slackbots');


var Bot = function Constructor(settings){
	this.settings = settings;
	this.settings.name = this.settings.name || 'DogeBot';
	this.dbPath = settings.dbPath || path.resolve(__dirname, '..', 'data', 'dogeBotDB.db');

	this.user = null;
	this.db = null;
};

util.inherits(Bot,bot);

Bot.prototype.run = function() {
	DogeBot.super_.call(this, this.settings);
	this.on('start',this._onStart);
	this.on('message', this._onMessage);
};

Bot.prototype._onStart = function(){
	this._loadBotUser();
	this._connectDb();
	this._firstRunCheck();
};

Bot.prototype._onMessage = function(){
	if(this._isChatMessage(message) && 
		this._isChannelConversation(message) && 
		this._isMentioningChuckNorris(message) &&
		!this._isFromBot(message)){
		this._replyJoke(message);
	}

Bot.prototype._replyJoke = function (originalMessage){
	var self = this;
	self.db.get('SELET id, joke FROM jokes ORDER BY RANDOM() LIMIT 1', function (err, record){
		if(err){
			return console.error('Error in Database');
		}

		var channelID = self._getChannelById(originalMessage.channelID);
		self.postMessageToChannel(channel.name,record.joke,{as_user: true});
	});
}

Bot.prototype._loadBotUser = function () {
	var self = this;
	this.user = this.users.filter(function (user){
		return user.name === self.name;
	})[0];
};


Bot.prototype._connectDb = function(){
	if(!fs.existsSync(this.dbPath)){
		console.error('DATABASE DOES NOT EXIST');
		process.exit(1);
	}
	else{
		this.db = new sqLite.Database(this.dbPath);
	}
};

Bot.prototype._firstRun = function() {
	var self = this;
	self.db.get('SELECT val FROM info WHERE name = "lastrun" LIMIT 1', function(err,record) {
		if(err){
			return console.error('DATABASE ERROR');
		}

		var thisTime = (new Date()).toJSON();

		if(!record){
			self._welcomeMessage();
			return self.db.run('INSERT INTO words(word,meaning) VALUES("lastrun",?',thisTime);
		}

		self.db.run('UPDATE words SET val = ? WHERE name = "lastrun"',thisTime);
	});
};

Bot.prototype._welcomeMessage = function (){

	this.postMessageToChannel(this.channels[0].name, 'Hello this is DogeBot! ' + ' \n I can tell jokes. Just say \'Chuck Norris\' or ' + this.name + ' to invoke me!',{as_user:true});
};

Bot.prototype._isChatMessage = function(message){
	return message.type === 'message' && Boolean(message.text);
};

Bot.prototype._isChannelConversation = function(message){
	return typeof message.channel === 'string' && message.channel[0] === 'C';
};

Bot.prototype._isMentioningChuckNorris = function(message){
	return message.text.toLowerCase().indexOf('chuck norris')> -1 || message.text.toLowerCase().indexOf(this.name) > -1;
};

Bot.prototype._isFromBot = function(message){
	return message.user === this.user.id;
};

Bot.prototype._getChannelById = function(channelID){
	return this.channels.filter(function (item){
		return item.id === channelID;

	})[0];
};

module.exports = Bot;

}







